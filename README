CREATE DATABASE ESCOLA;
USE ESCOLA;

CREATE TABLE ALUNO(
NOME VARCHAR(200),
CPF varchar(14),
DATA_NASCIMENTO DATE,
ID_MATRICULA varchar(60),
ID_CURSO int
);

SELECT * FROM ALUNO;

INSERT INTO ALUNO (NOME, CPF, DATA_NASCIMENTO, ID_MATRICULA, ID_CURSO) 
VALUES ("Kokimoto" , "036.220.150-00", "1700-08-29", "0001P548OO", 2);

INSERT INTO ALUNO (NOME, CPF, DATA_NASCIMENTO, ID_MATRICULA, ID_CURSO) 
VALUES ("Cirilo" , "100.000.020-00", "1999-08-29", "0001P548O22", 3);

INSERT INTO ALUNO (NOME, CPF, DATA_NASCIMENTO, ID_MATRICULA, ID_CURSO) 
VALUES ("Maria Joaquina" , "100.110.020-00", "2001-08-02", "0001P51111", 1);

ALTER TABLE ALUNO ADD PRIMARY KEY(CPF);


create table curso(
ID_CURSO int,
NOME_CURSO VARCHAR(60),
VALOR FLOAT,
SALA varchar(400)
);
 

INSERT INTO CURSO (ID_CURSO ,NOME_CURSO, VALOR, SALA) VALUES (1,"Medicina",14005, "sala 14 (segunda), laboratorio xxii(Terca), sala 5(Quarta), laboratorio xii(Quinta), sala 14 (sexta)");
INSERT INTO CURSO (ID_CURSO, NOME_CURSO, VALOR, SALA) VALUES (2,"Odontologia", 6000,  "sala 11 (segunda), laboratorio x(Terca), sala 8(Quarta), sala 10 (Quinta), sala 10 (sexta)");
INSERT INTO CURSO (ID_CURSO, NOME_CURSO, VALOR, SALA) VALUES (3, "Engenharia Civil", 2400,  "sala 2(segunda), sala 2(Terca), sala 2(Quarta), sala 1(Quinta), sala 4 (sexta)");

ALTER TABLE CURSO ADD PRIMARY KEY(ID_CURSO);

SELECT * FROM ALUNO;
SELECT * FROM CURSO;

SELECT ID_MATRICULA,NOME FROM ALUNO;

SELECT * FROM CURSO WHERE NOME_CURSO = "MEDICINA" OR NOME_CURSO = "ODONTOLOGIA";

SELECT B.NOME, A.NOME_CURSO FROM CURSO AS A INNER JOIN ALUNO AS B ON A.ID_CURSO =  B.ID_CURSO;

SELECT  B.CPF, B.NOME, A.NOME_CURSO, A.VALOR FROM CURSO AS A INNER JOIN ALUNO AS B ON A.ID_CURSO =  B.ID_CURSO WHERE A.NOME_CURSO= "oDONTOLOGIA";

use aluno;
select NOME_CURSO AS NOME, ID_CURSO,  SUM(VALOR) AS VALOR_TOTAL from curso GROUP BY ID_CURSO, NOME;

select nome AS nomeDoAluno, cpf from aluno group by nome, cpf order by nome; 

select * from curso;
select * from aluno order by nome;

insert  into aluno (nome, cpf, data_nascimento, id_matricula, id_curso) values ("Jaime Palillo", "123.321.455-13", "1500-01-02", "0002P54330", 1);

select nome_curso as nome, case when(valor < 3000) then "barato"  when (valor > 5000 and valor < 10000) then "em conta" when (valor >13000) then "caro" end as estado from curso;


CREATE DATABASE IF NOT EXISTS turismo;

USE turismo;

CREATE TABLE pais(
    id INT PRIMARY KEY auto_increment,
    nome_pais VARCHAR(40) NOT NULL,
    idioma VARCHAR(20),
    moeda VARCHAR(10),
    capital VARCHAR(20)
);

CREATE TABLE estado (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_estado VARCHAR(255) NOT NULL,
    populacao INT,
    governador VARCHAR(110),
    area_km2 DECIMAL(10, 2),
	fk_pais_id INT
);
ALTER TABLE estado ADD FOREIGN KEY (fk_pais_id) REFERENCES pais(id);

CREATE TABLE cidade (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_cidade VARCHAR(255) NOT NULL,
    populacao INT,
    fundacao DATE,
    clima VARCHAR(50),
	FK_estado_id INT
);
ALTER TABLE cidade ADD FOREIGN KEY (FK_estado_id) REFERENCES estado(id);

CREATE TABLE ponto_turistico(
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_ponto_turistico VARCHAR(255) NOT NULL,
     custo_entrada DECIMAL(10, 2),
    descricao_do_local TEXT,
    tipo_atracao VARCHAR(50),
    FK_cidade_id INT
    
);
ALTER TABLE ponto_turistico ADD FOREIGN KEY (fK_cidade_id) REFERENCES cidade(id);

CREATE TABLE coordenada (
    id INT PRIMARY KEY AUTO_INCREMENT,
    latitude DECIMAL(10, 8) NOT NULL,
    longitude DECIMAL(11, 8) NOT NULL,
    descricao VARCHAR(255),
    altitude DECIMAL(8, 2),
	fk_ponto_turismo_id INT
);
ALTER TABLE coordenada ADD FOREIGN KEY (fk_ponto_turismo_id) REFERENCES ponto_turistico(id);

.